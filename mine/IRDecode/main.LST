C51 COMPILER V9.01   MAIN                                                                  07/31/2019 01:07:47 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>   
   2          #include "LCD1602_drv.h"
   3          
   4          
   5          sbit IR = P3^2;  //RF sensor port
   6          
   7          char code Tab[16] = "0123456789ABCDEF";
   8          
   9          unsigned char IrDecodeData[4];
  10          unsigned char PluseTimeData[32];
  11          
  12          unsigned char TempData[16];
  13          
  14          unsigned char PulseTimeDataPosition;
  15          unsigned char PulseTimeCnt;
  16          unsigned char IrDataFinish;
  17          unsigned char IrDDPosition;
  18          
  19          
  20          /*32 bit RF signal process*/
  21          void IrDataCopeWith(void)
  22          { 
  23   1               // the timer is set to 0.25 per loop, we think that, when RF time is between 0.625 - 1.625ms, it's stand
             - to 0 and 1.725msµ½2.725ms as 1
  24   1           unsigned char i,j = 0;
  25   1           unsigned char byteContainer = 0;
  26   1               unsigned char IrDDPosition = 0; // index of RF code list
  27   1      
  28   1           for (i=0;i<32;i++)
  29   1           {
  30   2                   
  31   2               if  ((PluseTimeData[i]>=3) &&(PluseTimeData[i]<=6))
  32   2               {
  33   3                    // when it's 0, do nothing
  34   3               }
  35   2               else
  36   2               {
  37   3                    byteContainer |= 0x80; // the first come in bit is the highest one
  38   3               }
  39   2      
  40   2               // once 1 byte fill, store it to list, reset index j    
  41   2               if (++j >= 8)
  42   2               {
  43   3                   IrDecodeData[IrDDPosition++] = byteContainer;
  44   3                   byteContainer = 0;
  45   3                   j = 0;
  46   3               }
  47   2               
  48   2                       // 1 bit move right
  49   2               byteContainer  >>= 1;
  50   2          }
  51   1      }
  52          
  53          
  54          /*------------------------------------------------
C51 COMPILER V9.01   MAIN                                                                  07/31/2019 01:07:47 PAGE 2   

  55                            External Interrupt 0
  56          ------------------------------------------------*/
  57          void INT0Config(void)
  58          {
  59   1          /*trigger when 1 to 0*/
  60   1          IT0 = 1;
  61   1         /*enable interrupt*/
  62   1          EX0 = 1;
  63   1      
  64   1          /*All interrupt enable*/
  65   1          EA = 1;
  66   1      }
  67          /*Logic when EX0 is triggered*/
  68          void INT0ISR() interrupt 0
  69          {
  70   1              /* Everytime EX0 triggered, reset time gap counter */
  71   1      //    PulseTimeCnt = 0; 
  72   1              /*Time gap 10-17ms(40-68 TI), we treat it as RF start signal*/
  73   1          if  ((PulseTimeCnt>=40)&(PulseTimeCnt <= 68))
  74   1          {
  75   2              /* When there is RF signal, start count RF, there are totally 32 bit need to process */
  76   2              PulseTimeDataPosition  = 0;
  77   2          }
  78   1          else
  79   1          {
  80   2               PluseTimeData[PulseTimeDataPosition++] = PulseTimeCnt;
  81   2          }
  82   1      
  83   1              PulseTimeCnt = 0;
  84   1          if (PulseTimeDataPosition >= 32)
  85   1          {
  86   2             PulseTimeDataPosition = 0;
  87   2             
  88   2                 /*After data collection finished, calculate the RF code*/
  89   2             IrDataCopeWith();
  90   2             /*After process code, set process flag, show result in main func*/
  91   2             IrDataFinish = 1;
  92   2          }
  93   1      } 
  94          
  95          /*Config T0*/
  96          void Timer0Config(void)
  97          {
  98   1          /*8 bit auto reset timer*/
  99   1          TMOD = 0x02;
 100   1          /*0.25ms per loop*/
 101   1          TH0 = 0x1A;
 102   1          TL0 = 0x1A;
 103   1          /*Start T0*/
 104   1          TR0 = 1;
 105   1          /*Enable ET0*/
 106   1          ET0 = 1;
 107   1      }
 108          /*Logic when T0 triggered*/
 109          void Timer0ISR() interrupt 1
 110          {
 111   1          PulseTimeCnt++;
 112   1      }
 113          
 114          
 115          
 116          /*------------------------------------------------
C51 COMPILER V9.01   MAIN                                                                  07/31/2019 01:07:47 PAGE 3   

 117                              main func
 118          ------------------------------------------------*/
 119          void main (void)
 120          {
 121   1          INT0Config();            
 122   1          Timer0Config();           
 123   1      
 124   1          LCD_Init();           //Init LCD display
 125   1          DelayMs(20);          
 126   1          LCD_Clear();          //clear display
 127   1      
 128   1          LCD_Write_String(0,0,"   TR Project");
 129   1          LCD_Write_String(0,1,"IrCode:");
 130   1         
 131   1         while(1)
 132   1         {
 133   2             if (IrDataFinish )//RF process flag
 134   2             {
 135   3                  IrDataFinish = 0;
 136   3                  TempData[0] = Tab[IrDecodeData[2]/16];   //show data of RF code
 137   3                  TempData[1] = Tab[IrDecodeData[2]%16];
 138   3                  TempData[2] = '\0';   
 139   3                  LCD_Write_String(7,1,TempData);//show on LCD1602
 140   3             }
 141   2         }
 142   1      }
 143            
 144            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    261    ----
   CONSTANT SIZE    =     38    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     56    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
