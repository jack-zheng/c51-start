C51 COMPILER V9.01   MAIN                                                                  08/01/2019 20:37:50 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*=======================================================
   2          <<<<<<<<<<<<<<<<<<< 爱普雷德技术团队 >>>>>>>>>>>>>>>>>>>>
   3          <<<<<<<<<<<<<<<<<<< 我们一起追求卓越 >>>>>>>>>>>>>>>>>>>>
   4          ---------------------------------------------------------
   5          旗舰网店: http://aplid.taobao.com/
   6          官方邮箱: njaplid@163.com
   7           技术QQ1: 535676091
   8           技术QQ2: 1915624375
   9           技术QQ3: 154211813
  10          ---------------------------------------------------------
  11                         All right reserved.2013.01
  12          ---------------------------------------------------------
  13           文件名: LCD_12864.c
  14           描述: 液晶12864显示图片,汉字
  15           作者:
  16          =========================================================
  17          ----------------------------------------------------------------------------------------------------------
             --*/
  18          #include <reg52.h>
  19          #include <intrins.h>
  20          
  21          /* 定义LCD12864接口对应的端口和引脚 */
  22          #define LCD12864_DATA P0        //并行数据口
  23          sbit LCD12864_RS = P2^7;        //数据/命令选择
  24          sbit LCD12864_RW = P2^6;        //读/写选择
  25          sbit LCD12864_EN = P2^5;        //使能信号
  26          sbit LCD12864_PSB = P2^4;       //并/串接口选择, H并,L串
  27          sbit LCD12864_RST = P2^2;       //复位, L有效
  28          
  29          /* 定义Logo的位图数据 */
  30          code unsigned char TDCAPLID[]={
  31          /*------------------------------------------------------------------------------
  32            源文件 / 文字 : APLID二维码.bmp
  33            宽×高（像素）: 128×64
  34          ------------------------------------------------------------------------------*/
  35          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  36          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  37          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  38          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  39          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  40          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  41          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  42          0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x07,0xE7,0xE1,0xE0,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,
  43          0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x07,0xE7,0xE1,0xE0,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,
  44          0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xE6,0x07,0xF8,0x67,0xFE,0x7F,0xFF,0xFF,0xFF,0xFF,
  45          0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xE6,0x07,0xF8,0x67,0xFE,0x7F,0xFF,0xFF,0xFF,0xFF,
  46          0xFF,0xFF,0xFF,0xFF,0xFE,0x60,0x66,0x7F,0xE0,0x66,0x06,0x7F,0xFF,0xFF,0xFF,0xFF,
  47          0xFF,0xFF,0xFF,0xFF,0xFE,0x60,0x66,0x7F,0xE0,0x66,0x06,0x7F,0xFF,0xFF,0xFF,0xFF,
  48          0xFF,0xFF,0xFF,0xFF,0xFE,0x60,0x67,0x9E,0x61,0xE6,0x06,0x7F,0xFF,0xFF,0xFF,0xFF,
  49          0xFF,0xFF,0xFF,0xFF,0xFE,0x60,0x67,0x9E,0x61,0xE6,0x06,0x7F,0xFF,0xFF,0xFF,0xFF,
  50          0xFF,0xFF,0xFF,0xFF,0xFE,0x60,0x66,0x06,0x60,0x66,0x06,0x7F,0xFF,0xFF,0xFF,0xFF,
  51          0xFF,0xFF,0xFF,0xFF,0xFE,0x60,0x66,0x06,0x60,0x66,0x06,0x7F,0xFF,0xFF,0xFF,0xFF,
  52          0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xE6,0x66,0x78,0x67,0xFE,0x7F,0xFF,0xFF,0xFF,0xFF,
  53          0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xE6,0x66,0x78,0x67,0xFE,0x7F,0xFF,0xFF,0xFF,0xFF,
  54          0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x06,0x66,0x66,0x60,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,
C51 COMPILER V9.01   MAIN                                                                  08/01/2019 20:37:50 PAGE 2   

  55          0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x06,0x66,0x66,0x60,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,
  56          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x61,0xE7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  57          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x61,0xE7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  58          0xFF,0xFF,0xFF,0xFF,0xFE,0x19,0xE1,0xF8,0x18,0x60,0x61,0xFF,0xFF,0xFF,0xFF,0xFF,
  59          0xFF,0xFF,0xFF,0xFF,0xFE,0x19,0xE1,0xF8,0x18,0x60,0x61,0xFF,0xFF,0xFF,0xFF,0xFF,
  60          0xFF,0xFF,0xFF,0xFF,0xFF,0xE7,0x9E,0x18,0x7E,0x07,0xFE,0x7F,0xFF,0xFF,0xFF,0xFF,
  61          0xFF,0xFF,0xFF,0xFF,0xFF,0xE7,0x9E,0x18,0x7E,0x07,0xFE,0x7F,0xFF,0xFF,0xFF,0xFF,
  62          0xFF,0xFF,0xFF,0xFF,0xFF,0x98,0x61,0xF8,0x7E,0x18,0x78,0x7F,0xFF,0xFF,0xFF,0xFF,
  63          0xFF,0xFF,0xFF,0xFF,0xFF,0x98,0x61,0xF8,0x7E,0x18,0x78,0x7F,0xFF,0xFF,0xFF,0xFF,
  64          0xFF,0xFF,0xFF,0xFF,0xFE,0x7E,0x19,0x80,0x01,0xF8,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,
  65          0xFF,0xFF,0xFF,0xFF,0xFE,0x7E,0x19,0x80,0x01,0xF8,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,
  66          0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x01,0xE1,0x9E,0x01,0x98,0x7F,0xFF,0xFF,0xFF,0xFF,
  67          0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x01,0xE1,0x9E,0x01,0x98,0x7F,0xFF,0xFF,0xFF,0xFF,
  68          0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x18,0x79,0xFF,0x81,0x86,0x7F,0xFF,0xFF,0xFF,0xFF,
  69          0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x18,0x79,0xFF,0x81,0x86,0x7F,0xFF,0xFF,0xFF,0xFF,
  70          0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xE1,0xF9,0x9E,0x19,0xE6,0x7F,0xFF,0xFF,0xFF,0xFF,
  71          0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xE1,0xF9,0x9E,0x19,0xE6,0x7F,0xFF,0xFF,0xFF,0xFF,
  72          0xFF,0xFF,0xFF,0xFF,0xFF,0x9E,0x18,0x01,0x80,0x79,0x99,0xFF,0xFF,0xFF,0xFF,0xFF,
  73          0xFF,0xFF,0xFF,0xFF,0xFF,0x9E,0x18,0x01,0x80,0x79,0x99,0xFF,0xFF,0xFF,0xFF,0xFF,
  74          0xFF,0xFF,0xFF,0xFF,0xFE,0x07,0x86,0x06,0x7E,0x00,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,
  75          0xFF,0xFF,0xFF,0xFF,0xFE,0x07,0x86,0x06,0x7E,0x00,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,
  76          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x7E,0x66,0x7E,0x06,0x7F,0xFF,0xFF,0xFF,0xFF,
  77          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x7E,0x66,0x7E,0x06,0x7F,0xFF,0xFF,0xFF,0xFF,
  78          0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x06,0x00,0x18,0x66,0x78,0x7F,0xFF,0xFF,0xFF,0xFF,
  79          0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x06,0x00,0x18,0x66,0x78,0x7F,0xFF,0xFF,0xFF,0xFF,
  80          0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xE7,0x86,0x66,0x7E,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,
  81          0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xE7,0x86,0x66,0x7E,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,
  82          0xFF,0xFF,0xFF,0xFF,0xFE,0x60,0x67,0x86,0x06,0x00,0x79,0xFF,0xFF,0xFF,0xFF,0xFF,
  83          0xFF,0xFF,0xFF,0xFF,0xFE,0x60,0x67,0x86,0x06,0x00,0x79,0xFF,0xFF,0xFF,0xFF,0xFF,
  84          0xFF,0xFF,0xFF,0xFF,0xFE,0x60,0x66,0x01,0xF8,0x78,0x67,0xFF,0xFF,0xFF,0xFF,0xFF,
  85          0xFF,0xFF,0xFF,0xFF,0xFE,0x60,0x66,0x01,0xF8,0x78,0x67,0xFF,0xFF,0xFF,0xFF,0xFF,
  86          0xFF,0xFF,0xFF,0xFF,0xFE,0x60,0x67,0xE7,0x98,0x7E,0x06,0x7F,0xFF,0xFF,0xFF,0xFF,
  87          0xFF,0xFF,0xFF,0xFF,0xFE,0x60,0x67,0xE7,0x98,0x7E,0x06,0x7F,0xFF,0xFF,0xFF,0xFF,
  88          0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xE6,0x60,0x18,0x1F,0x9F,0xFF,0xFF,0xFF,0xFF,0xFF,
  89          0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xE6,0x60,0x18,0x1F,0x9F,0xFF,0xFF,0xFF,0xFF,0xFF,
  90          0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x06,0x78,0x06,0x61,0xF8,0x7F,0xFF,0xFF,0xFF,0xFF,
  91          0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x06,0x78,0x06,0x61,0xF8,0x7F,0xFF,0xFF,0xFF,0xFF,
  92          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  93          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  94          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  95          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  96          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  97          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  98          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
  99          };
 100          
 101          /* 定义Logo的位图数据 */
 102          code unsigned char LogoAPLID[]={
 103          /*------------------------------------------------------------------------------
 104            源文件 / 文字 : LogoAPLID黑白.bmp
 105            宽×高（像素）: 128×64
 106          ------------------------------------------------------------------------------*/
 107          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 108          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 109          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 110          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 111          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 112          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 113          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 114          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 115          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 116          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
C51 COMPILER V9.01   MAIN                                                                  08/01/2019 20:37:50 PAGE 3   

 117          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 118          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 119          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 120          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 121          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 122          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 123          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 124          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 125          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 126          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 127          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 128          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 129          0xFF,0xFF,0xFF,0x80,0x7F,0xE0,0x07,0xFC,0x03,0xFC,0x03,0xC0,0x00,0x07,0xFF,0xFF,
 130          0xFF,0xFF,0xFE,0x00,0x7F,0x00,0x01,0xFC,0x03,0xFC,0x03,0xC0,0x00,0x00,0xFF,0xFF,
 131          0xFF,0xFF,0xFC,0x00,0x7E,0x00,0x00,0x7C,0x03,0xFC,0x03,0xC0,0x00,0x00,0x3F,0xFF,
 132          0xFF,0xFF,0xFC,0x00,0x7C,0x00,0x00,0x3C,0x03,0xFC,0x03,0xC0,0x00,0x00,0x1F,0xFF,
 133          0xFF,0xFF,0xF8,0x00,0x7C,0x03,0xC0,0x3C,0x03,0xFC,0x03,0xC0,0x00,0x00,0x0F,0xFF,
 134          0xFF,0xFF,0xF0,0x00,0x78,0x03,0xC0,0x3C,0x03,0xFC,0x03,0xC0,0x1F,0x80,0x07,0xFF,
 135          0xFF,0xFF,0xF0,0x00,0x78,0x07,0xC0,0x1C,0x03,0xFC,0x03,0xC0,0x3F,0xF0,0x03,0xFF,
 136          0xFF,0xFF,0xE0,0x20,0x78,0x07,0xC0,0x1C,0x03,0xFC,0x03,0xC0,0x3F,0xF8,0x03,0xFF,
 137          0xFF,0xFF,0xC0,0x20,0x78,0x07,0xC0,0x3C,0x03,0xFC,0x03,0xC0,0x3F,0xF8,0x01,0xFF,
 138          0xFF,0xFF,0x80,0x60,0x78,0x07,0x80,0x3C,0x03,0xFC,0x03,0xC0,0x3F,0xFC,0x01,0xFF,
 139          0xFF,0xFF,0x80,0x60,0x78,0x07,0x00,0x7C,0x03,0xFC,0x03,0xC0,0x3F,0xFC,0x01,0xFF,
 140          0xFF,0xFF,0x00,0xC0,0x78,0x07,0x00,0xFC,0x03,0xFC,0x03,0xC0,0x3F,0xF8,0x03,0xFF,
 141          0xFF,0xFE,0x00,0xC0,0x78,0x07,0xC3,0xFC,0x03,0xFC,0x03,0xC0,0x3F,0xF8,0x03,0xFF,
 142          0xFF,0xFE,0x01,0xC0,0x78,0x07,0xFF,0xFC,0x03,0xFC,0x03,0xC0,0x3F,0xF0,0x03,0xFF,
 143          0xFF,0xFC,0x01,0xC0,0x78,0x07,0xFF,0xFC,0x01,0xFC,0x03,0xC0,0x3F,0x80,0x07,0xFF,
 144          0xFF,0xF8,0x03,0xC0,0x78,0x07,0xFF,0xFC,0x00,0x3C,0x03,0xC0,0x30,0x00,0x0F,0xFF,
 145          0xFF,0xF8,0x03,0xC0,0x78,0x07,0xFF,0xFC,0x00,0x3C,0x03,0xC0,0x30,0x00,0x1F,0xFF,
 146          0xFF,0xF0,0x07,0x80,0x78,0x07,0xFF,0xFE,0x00,0x3C,0x03,0xC0,0x30,0x00,0x3F,0xFF,
 147          0xFF,0xE0,0x07,0x80,0x78,0x07,0xFF,0xFF,0x00,0x3C,0x03,0xC0,0x30,0x00,0xFF,0xFF,
 148          0xFF,0xE0,0x0F,0x80,0x78,0x07,0xFF,0xFF,0xC0,0x3C,0x03,0xC0,0x30,0x03,0xFF,0xFF,
 149          0xFF,0xC0,0x0F,0x80,0x78,0x07,0xFF,0xFF,0xF0,0x3C,0x03,0xC0,0x30,0x3F,0xFF,0xFF,
 150          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 151          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 152          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 153          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 154          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 155          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 156          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 157          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 158          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 159          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 160          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 161          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 162          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 163          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 164          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 165          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 166          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 167          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 168          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 169          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 170          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 171          };
 172          
 173          /**********************************************
 174          功能：
 175              延时函数
 176          输入参数：
 177              n: 延时时长
 178          输出参数：
C51 COMPILER V9.01   MAIN                                                                  08/01/2019 20:37:50 PAGE 4   

 179              无
 180          返回值：
 181          **********************************************/
 182          void Delay(unsigned int n)
 183          {
 184   1          unsigned int i;
 185   1          while(n--)
 186   1          {
 187   2              i=200;
 188   2              while(i--);
 189   2          }
 190   1      }
 191          
 192          /**********************************************
 193          功能：
 194              忙检测
 195          输入参数：
 196              无
 197          输出参数：
 198              无
 199          返回值：
 200              1: 忙
 201              0: 空闲
 202          **********************************************/
 203          bit BusyCheck(void)
 204          {
 205   1          bit BusyBit;
 206   1          
 207   1          LCD12864_DATA = 0xFF;
 208   1          LCD12864_RS = 0;
 209   1          LCD12864_RW = 1;
 210   1          LCD12864_EN = 1;
 211   1          _nop_();
 212   1          BusyBit = (bit)(LCD12864_DATA>>7);
 213   1          LCD12864_EN = 0;
 214   1          return BusyBit;
 215   1      }
 216          
 217          /**********************************************
 218          功能：
 219              写命令到LCD12864
 220          输入参数：
 221              CmdByte: 命令字节
 222          输出参数：
 223              无
 224          返回值：
 225          **********************************************/
 226          void CommandWrite12864(unsigned char CmdByte)
 227          {
 228   1          while(BusyCheck());             //等待忙
 229   1          LCD12864_RS = 0;
 230   1          LCD12864_RW = 0;
 231   1          LCD12864_EN = 1;
 232   1          LCD12864_DATA = CmdByte;
 233   1          _nop_();
 234   1          LCD12864_EN = 0;
 235   1      }
 236          
 237          /**********************************************
 238          功能：
 239              写数据到LCD12864
 240          输入参数：
C51 COMPILER V9.01   MAIN                                                                  08/01/2019 20:37:50 PAGE 5   

 241              DataByte: 数据字节
 242          输出参数：
 243              无
 244          返回值：
 245          **********************************************/
 246          void DataWrite12864(unsigned char DataByte)
 247          {
 248   1          while(BusyCheck());             //等待忙
 249   1          LCD12864_RS = 1;
 250   1          LCD12864_RW = 0;
 251   1          LCD12864_EN = 1;
 252   1          LCD12864_DATA = DataByte;
 253   1          _nop_();
 254   1          LCD12864_EN = 0;
 255   1      }
 256          
 257          /**********************************************
 258          功能：
 259              初始化LCD12864
 260          输入参数：
 261              无
 262          输出参数：
 263              无
 264          返回值：
 265          **********************************************/
 266          void Reset12864(void)
 267          {
 268   1              LCD12864_PSB = 1;               //选择并口传输
 269   1              CommandWrite12864(0x30);        //选择基本指令集
 270   1              CommandWrite12864(0x0c);        //开显示(无游标、不反白)
 271   1              CommandWrite12864(0x01);        //清除显示，并且设定地址指针为00H
 272   1              CommandWrite12864(0x06);        //指定在资料的读取及写入时，设定游标的移动方向及指定显示的移位
 273   1      }
 274          
 275          /**********************************************
 276          功能：
 277              清屏
 278          输入参数：
 279              无
 280          输出参数：
 281              无
 282          返回值：
 283          **********************************************/
 284          void ScreenClear12864(void)
 285          {
 286   1          CommandWrite12864(0x01);
 287   1      }
 288          
 289          /**********************************************
 290          功能：
 291              在指定坐标显示字符串
 292          输入参数：
 293              x: 横坐标(0――15)
 294              y: 纵坐标(0――1)
 295              String: 字符串
 296          输出参数：
 297              无
 298          返回值：
 299          **********************************************/
 300          void StringDisplay12864(unsigned char x, unsigned char y, unsigned char *String)
 301          {
 302   1          if((x<8)&&(y<4))
C51 COMPILER V9.01   MAIN                                                                  08/01/2019 20:37:50 PAGE 6   

 303   1          {
 304   2              //指定数据地址
 305   2              switch(y)
 306   2              {
 307   3                  case 0:
 308   3                      CommandWrite12864(0x80|0x00|x);
 309   3                      break;
 310   3                  case 1:
 311   3                      CommandWrite12864(0x80|0x10|x);
 312   3                      break;
 313   3                  case 2:
 314   3                      CommandWrite12864(0x80|0x08|x);
 315   3                      break;
 316   3                  case 3:
 317   3                      CommandWrite12864(0x80|0x18|x);
 318   3                      break;
 319   3              }
 320   2              //显示字符串
 321   2              while(*String != '\0')
 322   2              {
 323   3                  DataWrite12864(*String);
 324   3                  Delay(50);
 325   3                  String++;
 326   3              }
 327   2          }
 328   1      }
 329          
 330          /**********************************************
 331          功能：
 332              显示一整个位图
 333          输入参数：
 334              Picture: 指向位图的指针
 335          输出参数：
 336              无
 337          返回值：
 338          **********************************************/
 339          void PictureDisplay12864(unsigned char code *Picture)
 340          {
 341   1          unsigned char i,j,k;
 342   1          
 343   1          /* 选择扩展指令集，并关闭绘图显示 */
 344   1              CommandWrite12864(0x34);
 345   1              CommandWrite12864(0x34);
 346   1          /* 将位图的所有字节写到液晶的位图RAM中 */
 347   1          for(i=0; i<2; i++)                      //GDRAM分上下两页
 348   1          {
 349   2              for(j=0; j<32; j++)
 350   2              {
 351   3                  /* 写纵坐标y和横坐标x */
 352   3                  CommandWrite12864(0x80+j);      //写GDRAM的坐标y，即第y行
 353   3                  if(i==0)
 354   3                  {
 355   4                      CommandWrite12864(0x80);    //写GDRAM的坐标x（上页）
 356   4                  }
 357   3                  else
 358   3                  {
 359   4                      CommandWrite12864(0x88);    //写GDRAM的坐标x（下页）
 360   4                  }
 361   3                  /* 将16个字节写入GDRAM */
 362   3                  for(k=0; k<16; k++)
 363   3                  {
 364   4                      DataWrite12864(*Picture++);
C51 COMPILER V9.01   MAIN                                                                  08/01/2019 20:37:50 PAGE 7   

 365   4                  }
 366   3              }
 367   2          }
 368   1          /* 打开绘图显示，并选择基本指令集 */
 369   1          CommandWrite12864(0x36);
 370   1          CommandWrite12864(0x30);
 371   1      }
 372          
 373          /*--------------------------------------------------------------------------------------------------------
             --*/
 374          /**********************************************
 375              主函数，实现LCD12864显示功能
 376          **********************************************/
 377          void main()
 378          {
 379   1          Reset12864();                           //液晶12864初始化
 380   1          Delay(20);                              //延时,保证显示更稳定
 381   1          PictureDisplay12864(LogoAPLID);         //显示Logo图案
 382   1          Delay(1000);
 383   1          ScreenClear12864();
 384   1          
 385   1          while(1) //无限循环
 386   1          {
 387   2              StringDisplay12864(0,0,"爱普雷德电子科技");
 388   2              StringDisplay12864(0,1,"................");
 389   2              StringDisplay12864(0,2,"在实践中快乐学习");
 390   2              StringDisplay12864(0,3,"................");
 391   2              Delay(2000);
 392   2              ScreenClear12864();
 393   2              PictureDisplay12864(TDCAPLID);
 394   2              Delay(2000);
 395   2              ScreenClear12864();
 396   2          }
 397   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    379    ----
   CONSTANT SIZE    =   2099    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
