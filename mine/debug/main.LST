C51 COMPILER V9.01   MAIN                                                                  08/03/2019 23:05:40 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*=======================================================
   2          <<<<<<<<<<<<<<<<<<< 爱普雷德技术团队 >>>>>>>>>>>>>>>>>>>>
   3          <<<<<<<<<<<<<<<<<<< 我们一起追求卓越 >>>>>>>>>>>>>>>>>>>>
   4          ---------------------------------------------------------
   5          旗舰网店: http://aplid.taobao.com/
   6          官方邮箱: njaplid@163.com
   7           技术QQ1: 535676091
   8           技术QQ2: 1915624375
   9           技术QQ3: 154211813
  10          ---------------------------------------------------------
  11                         All right reserved.2013.01
  12          ---------------------------------------------------------
  13           文件名: DS18B20.c
  14           描述: DS18B20采集温度并显示到数码管（12M晶振下操作）
  15           作者:
  16          =========================================================
  17          ----------------------------------------------------------------------------------------------------------
             --*/
  18          #include <reg52.h>
  19          #include <intrins.h>    // 因为此文件中用到了延时函数_nop_()，所以要包含_nop_()的头文件
  20          
  21          /* 定义DS18B20接口对应的端口 */
  22          //sbit DS18B20_DQ = P1^4; // DS18B20的数据通信引脚DQ
  23          sbit DQ = P1^4;
  24          
  25          /* 定义数码管显示模块接口对应的端口 */
  26          sbit DIG_DATA = P0^2;   // 74HC595的数据输入引脚
  27          sbit DIG_SHCP = P0^4;   // 74HC595的移位脉冲引脚
  28          sbit DIG_STCP = P2^3;   // 74HC595的锁存脉冲引脚
  29          
  30          /* 变量定义 */
  31          unsigned char DigBuf[4];    //定义数码管显示缓冲区
  32          
  33          code unsigned char Segment[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90}; // 数字段码，Segment[0
             -]~Segment[9]分别对应数字0~9的段码
  34          code unsigned char Select[] = {0xff,0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};       // 位选，Select[0]为全
             -选，Select[1]~Select[8]分别对应第1位（最右侧）~第8位（最左侧）
  35          
  36          /*--------------------------------------------------------------------------------------------------------
             --*/
  37          /* 温度模块DS18B20相关函数 */
  38          /**********************************************
  39          功能：
  40              延时函数
  41          输入参数：
  42              n: 延时时长
  43          输出参数：
  44              无
  45          返回值：
  46          **********************************************/
  47          void Delay(unsigned int n)
  48          {
  49   1          unsigned int i;
  50   1          while(n--)
  51   1          {
C51 COMPILER V9.01   MAIN                                                                  08/03/2019 23:05:40 PAGE 2   

  52   2              i=200;
  53   2              while(i--);
  54   2          }
  55   1      }
  56          /*延时基准3us 晶振为11.0592MHz*/
  57          void DelayXus(unsigned char n)
  58          {
  59   1          while(n--);
  60   1      }
  61          
  62          void delay4us(unsigned char t){
  63   1              while(t--);
  64   1      }
  65          /**********************************************
  66          功能：
  67              初始化DS18B20
  68          输入参数：
  69              无
  70          输出参数：
  71              无
  72          返回值：
  73          **********************************************/
  74           /*初始化序列：目的是看一下DS18B20是否存在，存在返回1，不存在则返回0。好进行下一步操作*/
  75          void DS18B20Init(void)
  76          {
  77   1              // master send a pull down to bus, bus low minimus time is 480 us.
  78   1              DQ = 0;
  79   1              delay4us(130);
  80   1              // then master release bus and wait for slave fead back
  81   1              DQ = 1; 
  82   1              // after bus released, 18b20 wait 15-60us and give a low signal, 
  83   1              delay4us(40);
  84   1              // this signal will last about 60-240us, then device release bus
  85   1          /* For this practice, ew just think this device would be work, so just delay time and let it go*/
  86   1              delay4us(100);
  87   1      }
  88          
  89          /**********************************************
  90          功能：
  91              写一个字节到DS18B20
  92          输入参数：
  93              WByte:要写的字节
  94          输出参数：
  95              无
  96          返回值：
  97          **********************************************/
  98          /*写DS18B20一个字节Byte*/
  99          void DS18B20WriteOneByte(unsigned char cmd)
 100          {
 101   1              unsigned char i;
 102   1      
 103   1              for (i=0;i<8;i++){
 104   2                      if (cmd & 0x01){
 105   3                              // if the bit 0 is high, generate high signal
 106   3                              // to generate 1 time slot, pull down bus, and release in 15us, all write time slot must be a minimum 6
             -0us duration 
 107   3                              DQ = 0;
 108   3                              DQ = 1;
 109   3                              delay4us(30);
 110   3                      }else{
 111   3                              // to generate 0 time slot, pull down bus and hold at least 60us
 112   3                              /*hold low for more than 480us will cause all components on bus reset*/
C51 COMPILER V9.01   MAIN                                                                  08/03/2019 23:05:40 PAGE 3   

 113   3                              DQ = 0;
 114   3                              delay4us(20);
 115   3                              DQ = 1; 
 116   3                      }
 117   2                      cmd >>= 1;
 118   2              }       
 119   1      }
 120          /**********************************************
 121          功能：
 122              从DS18B20读取一个字节
 123          输入参数：
 124              无
 125          输出参数：
 126              无
 127          返回值：
 128              RecByte:从DS18B20所读取的字节
 129          **********************************************/
 130          unsigned char DS18B20ReadOneByte(void)
 131          {
 132   1              unsigned char dat;
 133   1              // all read time slots must be a mininum of 60us in duration with a minimum of 1us recovery time between 
             -slots
 134   1              unsigned char i;
 135   1              for (i=0;i<8;i++){
 136   2                      // DS18b20 transmit 1 by leave bus to high, and 0 by pull down bus to low till the time slot end.
 137   2                      dat >>= 1;
 138   2                      DQ = 0; // bus low as initiates
 139   2                      DQ = 1; // reset port and wait for receive
 140   2                      // data from 18b20 valid for 15us after master's read signal, which mean, *master should finish sample i
             -n 15us!*
 141   2                      if (DQ){
 142   3                              // if DQ is high, give a 1 to dat
 143   3                              dat |= 0x80;
 144   3                      }
 145   2                      delay4us(30);
 146   2              }
 147   1              return dat;
 148   1      }
 149          /**********************************************
 150          功能：
 151              开始温度转换
 152          输入参数：
 153              无
 154          输出参数：
 155              无
 156          返回值：
 157          **********************************************/
 158          void DS18B20TConvertStart(void)
 159          {
 160   1          DS18B20Init();              //DS18B20初始化
 161   1          Delay(1);                   //延时
 162   1          
 163   1          DS18B20WriteOneByte(0xCC);     //发送跳过ROM指令
 164   1          DS18B20WriteOneByte(0x44);     //发送启动温度转换指令
 165   1      }
 166          
 167          /**********************************************
 168          功能：
 169              获取温度值
 170          输入参数：
 171              无
 172          输出参数：
C51 COMPILER V9.01   MAIN                                                                  08/03/2019 23:05:40 PAGE 4   

 173              Temperature: 温度值，16位数。
 174              其中BIT15――BIT11(符号位);
 175                  BIT10――BIT4 (整数位);
 176                  BIT3 ――BIT0 (小数位);
 177          返回值：
 178          **********************************************/
 179          unsigned int DS18B20TGet(void)
 180          {
 181   1          unsigned int Temperature;
 182   1          
 183   1          DS18B20Init();              //DS18B20初始化
 184   1          Delay(1);                   //延时
 185   1          
 186   1          DS18B20WriteOneByte(0xCC);     //发送跳过ROM指令
 187   1          DS18B20WriteOneByte(0xBE);     //发送读取便签指令
 188   1          
 189   1          Temperature = DS18B20ReadOneByte();    //读取便签的低字节（8位）
 190   1          Temperature |= DS18B20ReadOneByte()<<8;//读取便签的高字节（8位）
 191   1          
 192   1          return(Temperature);        //返回读取的便签值（16位）
 193   1      }
 194          
 195          /*--------------------------------------------------------------------------------------------------------
             --*/
 196          /* 数码管显示相关函数 */
 197          /**********************************************
 198          功能：
 199              输出位选字节和段码字节
 200          输入参数：
 201              SelectByte:  位选字节
 202              SegmentByte: 段码字节
 203          输出参数：
 204              无
 205          返回值：
 206          **********************************************/
 207          void DigOutput(unsigned char SelectByte, unsigned char SegmentByte)
 208          {
 209   1          unsigned char i;
 210   1          
 211   1              DIG_SHCP = 0;   // 74HC595的移位脉冲引脚输出低电平
 212   1              DIG_STCP = 0;   // 74HC595的锁存脉冲引脚输出低电平
 213   1          
 214   1          /* 将段码字节（共8位，高位在前）移入74HC595芯片 */
 215   1              for(i=0; i<8; i++)
 216   1              {
 217   2              /* 判断数据的最高位，如果最高位是1，数据引脚输出高电平；如果是0，输出低电平 */
 218   2                  if(SegmentByte&0x80)
 219   2              {
 220   3                      DIG_DATA = 1;
 221   3              }
 222   2                      else
 223   2              {
 224   3                          DIG_DATA = 0;
 225   3              }
 226   2                      _nop_();
 227   2              /* 输出74HC595芯片的数据移位脉冲，每输出一个移位脉冲，74HC595内部的数据移动一位 */
 228   2                      DIG_SHCP = 1;
 229   2                      _nop_();
 230   2                      DIG_SHCP = 0;
 231   2                      _nop_();
 232   2              /* 要输出的数据左移一位，即为下一位数据的输出作准备 */
 233   2                      SegmentByte <<= 1;
C51 COMPILER V9.01   MAIN                                                                  08/03/2019 23:05:40 PAGE 5   

 234   2              }
 235   1          /* 将位选字节（共8位，高位在前）移入74HC595芯片 */
 236   1              for(i=0; i<8; i++)
 237   1              {
 238   2                  if(SelectByte&0x80)
 239   2              {
 240   3                      DIG_DATA = 1;
 241   3              }    
 242   2                      else
 243   2              {
 244   3                          DIG_DATA = 0;
 245   3              }
 246   2                      _nop_();
 247   2                      DIG_SHCP = 1;
 248   2                      _nop_();
 249   2                      DIG_SHCP = 0;
 250   2                      _nop_();
 251   2                      SelectByte <<= 1;
 252   2              }
 253   1          /* 输出74HC595芯片的数据锁存脉冲，即将74HC595芯片接收到的最新数据输出到芯片的所有数据引脚 */
 254   1              DIG_STCP = 1;
 255   1              _nop_();
 256   1              DIG_STCP = 0;
 257   1              _nop_();
 258   1      }
 259          
 260          /**********************************************
 261          功能：
 262              在某位显示自定义段码
 263          输入参数：
 264              DigSelect: 数码管位选择（1――8，即最右到最左）
 265              CustomSeg: 自定义段码值
 266          输出参数：
 267              无
 268          返回值：
 269          **********************************************/
 270          void DigShowCustom(unsigned char DigSelect, unsigned char CustomSeg)
 271          {
 272   1          if(0<DigSelect<9)   //判断位选的值是否为1――8，若超出这个范围，则不作任何操作
 273   1          {
 274   2              DigOutput(Select[DigSelect],CustomSeg);
 275   2          }
 276   1      }
 277          
 278          /**********************************************
 279          功能：
 280              在某位显示数字
 281          输入参数：
 282              DigSelect: 数码管位选择（1――8，即最右到最左）
 283              Number:    数字（0――9）
 284              Dp:        小数点（1:显示；0:不显示）
 285          输出参数：
 286              无
 287          返回值：
 288          **********************************************/
 289          void DigShowNumber(unsigned char DigSelect, unsigned char Number, bit Dp)
 290          {
 291   1          if((0<DigSelect<9)&&(Number<10))    //同时判断位选的值是否为1――8，显示值是否为0――9。若超出范围，则
             -不作任何操作
 292   1          {
 293   2              if(Dp)
 294   2              {
C51 COMPILER V9.01   MAIN                                                                  08/03/2019 23:05:40 PAGE 6   

 295   3                  DigOutput(Select[DigSelect],(Segment[Number]&~0x80));   //点亮小数点
 296   3              }
 297   2              else
 298   2              {
 299   3                  DigOutput(Select[DigSelect],(Segment[Number]|0x80));    //熄灭小数点
 300   3              }
 301   2          }
 302   1      }
 303          
 304          /*--------------------------------------------------------------------------------------------------------
             --*/
 305          /**********************************************
 306              主函数，读取并显示DS18B20的温度
 307          **********************************************/
 308          void main()
 309          {
 310   1          unsigned int i=0;   //定义循环的计数值并赋初始值
 311   1          float TGet;         //定义从DS18B20读取的数
 312   1          signed int TShow;   //定义转换后需要显示的数
 313   1          
 314   1          while(1)
 315   1          {
 316   2              /* 步骤1：若满足判断语句，则启动温度转换 */
 317   2              if(i==0)
 318   2              {
 319   3                  DS18B20TConvertStart();     //启动温度转换
 320   3              }
 321   2              /* 步骤2：若满足判断语句，读取温度值并转换存储至显示缓存 */
 322   2              if(i==100)
 323   2              {
 324   3                  TGet = DS18B20TGet()*0.0625;//得到真实十进制温度值，因为DS18B20
 325   3                                                          //可以精确到0.0625度，所以读回数据的最低位代表的是0.0625度。
 326   3                  TShow = TGet*10+0.5;        //放大十倍，这样做的目的将小数点后第一位也转换为可显示数字，同时进
             -行一个四舍五入操作。
 327   3      
 328   3                  if(TShow<0)                 //判断温度值是否为负数
 329   3                  {
 330   4                      DigBuf[0] = 0xbf;
 331   4                      TShow = 0-TShow;
 332   4                  }
 333   3                  else
 334   3                  {
 335   4                      DigBuf[0] = TShow/1000; //保存温度百位值
 336   4                  }
 337   3                  TShow = TShow%1000;
 338   3                  DigBuf[1] = TShow/100;      //保存温度十位值
 339   3                  TShow = TShow%100;
 340   3                  DigBuf[2] = TShow/10;       //保存温度个位值
 341   3                  DigBuf[3] = TShow%10;       //保存小数点后一位值
 342   3              }
 343   2              /* 步骤3：对i进行加1或归零 */
 344   2              if(++i>3000)                    //将i的值加1并且判断i是否大于3000
 345   2              {
 346   3                  i = 0;                      //若超出了3000，则归零
 347   3              }
 348   2              /* 步骤4：进行数码管的动态显示 */
 349   2              DigShowNumber(1,DigBuf[3],0);   //数码管第1位显示小数点后一位的值
 350   2              DigShowNumber(2,DigBuf[2],1);   //数码管第2位显示个位值，同时显示小数点
 351   2              DigShowNumber(3,DigBuf[1],0);   //数码管第3位显示十位值
 352   2              if(DigBuf[0]==0xbf)             //判断DigBuf[0]的值是否为0xbf，即判断温度是否为负数
 353   2              {
 354   3                  DigShowCustom(4,0xbf);      //若是负数，第4位显示负号
C51 COMPILER V9.01   MAIN                                                                  08/03/2019 23:05:40 PAGE 7   

 355   3              }
 356   2              else if(DigBuf[0]>0)            //若DigBuf[0]不为0xbf，再判断DigBuf[0]是否大于0
 357   2              {
 358   3                  DigShowNumber(4,DigBuf[0],0);//若DigBuf[0]大于0，第4位显示该数值
 359   3              }
 360   2              else                            //否则
 361   2              {
 362   3                  DigShowCustom(4,0xff);      //第4位数码管全灭
 363   3              }
 364   2          }
 365   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    599    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
